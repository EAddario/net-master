using System;

namespace CurrencyCloud.Entity
{
    public class ConversionFindParameters : FindParameters
    {

        ///<summary>
        /// Unique human readable identifier
        ///</summary>
        [Param]
        public string ShortReference { get; set; }

        ///<summary>
        /// The current status of the Conversion
        ///</summary>
        [Param]
        public string Status { get; set; }

        ///<summary>
        /// The partner status of the Conversion
        ///</summary>
        [Param]
        public string PartnerStatus { get; set; }

        ///<summary>
        /// 3 character ISO 4217 currency code
        ///</summary>
        [Param]
        public string BuyCurrency { get; set; }

        ///<summary>
        /// 3 character ISO 4217 currency code
        ///</summary>
        [Param]
        public string SellCurrency { get; set; }

        ///<summary>
        /// Array of conversion ids
        ///</summary>
        [Param]
        public string[] ConversionIds { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was created
        ///</summary>
        [Param]
        public DateTime? CreatedAtFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was created
        ///</summary>
        [Param]
        public DateTime? CreatedAtTo { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was updated
        ///</summary>
        [Param]
        public DateTime? UpdatedAtFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was updated
        ///</summary>
        [Param]
        public DateTime? UpdatedAtTo { get; set; }
        
        ///<summary>
        /// ISO 8601 Datetime when the conversion was updated
        ///</summary>
        [Param]
        public DateTime? ConversionDateFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the conversion was updated
        ///</summary>
        [Param]
        public DateTime? ConversionDateTo { get; set; }

        ///<summary>
        /// Currency pair
        ///</summary>
        [Param]
        public string CurrencyPair { get; set; }

        [Param]
        public decimal? PartnerBuyAmountFrom { get; set; }

        [Param]
        public decimal? PartnerBuyAmountTo { get; set; }

        [Param]
        public decimal? PartnerSellAmountFrom { get; set; }

        [Param]
        public decimal? PartnerSellAmountTo { get; set; }

        [Param]
        public decimal? BuyAmountFrom { get; set; }

        [Param]
        public decimal? BuyAmountTo { get; set; }

        [Param]
        public decimal? SellAmountFrom { get; set; }

        [Param]
        public decimal? SellAmountTo { get; set; }
        
        ///<summary>
        /// Controls the search of conversions at all account levels. Defaults to own.
        /// own: allows to search conversions on the main account
        /// clients: allows to search conversions of account sub accounts
        /// all: allows to search conversions across account and sub-accounts
        ///</summary>
        [Param]
        public string Scope { get; set; }
        
        ///<summary>
        /// ISO 8601 Datetime when the sell_currency will be debited
        ///</summary>
        [Param]
        public DateTime? SettlementDateFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the sell_currency will be debited
        ///</summary>
        [Param]
        public DateTime? SettlementDateTo { get; set; }
        
        ///<summary>
        /// Unique reference generated by user, to prevent duplicate conversions.
        ///</summary>
        [Param]
        public string UniqueRequestId { get; set; }
        
        ///<summary>
        /// Reference ID of bulk upload, this field is generated only if the conversion has been created
        /// through bulk upload and NULL otherwise
        ///</summary>
        [Param]
        public string BulkUploadId { get; set; }
    }
}
